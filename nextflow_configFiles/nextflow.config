
params {

  //General Parameters
    RAM  = 10000
    threads = 14
    fastqDir = "$baseDir/TEST_DATA"
    cleanReads = "$baseDir/cleanReads"

    //The maximum amount of memory used in BBmerge. Larger files (>250Mbs) need a lot of memory, recommended over 10g. 
    //Specify GBs of memory with 'g', MBs of memory with 'm'. The default requests 12 GBs of memory. Specified value must be within quotes
      bbmergeRAM = "12g"

    adapters = "$baseDir/REFERENCES/Illumina_adapters.fasta"

    metadata = "$baseDir/pvivax_allBatches_metadata_update.xlsx"
    //reportFolder = "$baseDir/REPORTS"
    qcFolder = "$baseDir/FASTQ_QC"
    
    pyscripts = "$baseDir/python_R_scripts"
    
  //Clustering parameters
    //For module 1
      assignHap_min = 10
      depthNewHap_min = 20
      nameLength = 15

      originalHaplotypes_refs = "$baseDir/HAPLOTYPE_CALLER_PVIVAX/REF_SEQS/BLASTING/ORIGINAL_REFS/SHORT_HAPS_VIVAX_ALL_CHROMOSOMES_FINAL_FIXED_JULY_26_2023.fasta"
      fullNonJunction_refs = "$baseDir/HAPLOTYPE_CALLER_PVIVAX/REF_SEQS/READ_RECOVERY/P_VIVAX_ALL_LONG_HAPS_READ_RECOVERY_ALL_CHROMOSOMES_JULY_26_2023.fasta"
      origNewHaps = "$baseDir/HAPLOTYPE_CALLER_PVIVAX/REF_SEQS/BLASTING/NEW_HAPS"

      bedFile = "$baseDir/HAPLOTYPE_CALLER_PVIVAX/REF_SEQS/BED_FILE/FIXED_P_VIVAX_ALL_CHROMOSOMES_FINAL_FIXED_JULY_26_2023.bed"
      loci = "$baseDir/HAPLOTYPE_CALLER_PVIVAX/LIST_OF_LOCI_UNIQUE"

      // Specify parameter to perl and java scripts used for clustering
        multiSeq_pl = "$baseDir/HAPLOTYPE_CALLER_PVIVAX/make_multi_seq.pl"
        samjs = "$baseDir/HAPLOTYPE_CALLER_PVIVAX/java_depends/samjs.jar"
        pcrclipreads = "$baseDir/HAPLOTYPE_CALLER_PVIVAX/java_depends/pcrclipreads.jar"
        biostar84452 = "$baseDir/HAPLOTYPE_CALLER_PVIVAX/java_depends/biostar84452.jar"
      
    
    //For modules 2 and 3
      //Output folders
        matrixFolder = "$baseDir/ensemble_matrices"
        treeOut = "$baseDir/treeFolder"
        individualMatrixFolder = "$baseDir/ensemble_matrices_perChromosome"
        clusterFolder = "$baseDir/clusters_detected"

        reportOut = "$baseDir/reportFolder"

        reportState = "allStates"

      // Specify empty files as default input for workflows 2 and 3 (when run alone). This allows for command line arguments to specify inputs for workflows 2 and 3
        wf2HapSheet = "$baseDir/modules/files_forNextflow/empty.fasta"
        wf3Matrix = "$baseDir/modules/files_forNextflow/empty.fasta"

      wf2MarkerList = "$baseDir/Eukaryotpying-Python-main/DISTCOMP/Pycode_distcomp/markerList.txt"
      wf2MinLociNum = 5
    
      //path for choosing a specific genotypes and reference folder for creating a hap sheet. Not often used, but nice to have
        hapSheet_specifcGenotypes = "$baseDir/HAPLOTYPE_CALLER_PVIVAX/SPECIMEN_GENOTYPES"
        hapSheet_specifcReferences = "$baseDir/Eukaryotpying-Python-main/PVIVAX_REF_GENOTYPES"

  // mars parameters
    out = "$baseDir/MaRS_output"
    memory = "12g"

    //Reference info
      snpeff_config = "$baseDir/pv_sal_snpEff_db"
      dbName = "pv_sal_snpEff_db"
      gff = "$baseDir/REFERENCES/pv_sal_Ref/PV_sal1.gff"
      ref = "$baseDir/REFERENCES/pv_sal_Ref/PV-salI.fasta"
      voi = "$baseDir/REFERENCES/pv_sal_Ref/voinew3.csv"

  // Geo Prediction Parameters
    //Reference info
      humanRef = "$baseDir/REFERENCES/GRCh38_noalt_as"
      ampliseqRef = "$baseDir/REFERENCES/pv_geo_refs/P_VIVAX_ALL_LONG_HAPS_READ_RECOVERY_ALL_CHROMOSOMES_JULY_26_2023.fasta"
      panelRefBarcode = "$baseDir/REFERENCES/pv_geo_refs/geoCombined_barcode_allSamples.csv"
      balkCountry_JLIB = "$baseDir/REFERENCES/pv_geo_refs/geoCombined_singularityCountry_classifier.joblib.gz"
      balkRegion_JLIB = "$baseDir/REFERENCES/pv_geo_refs/geoCombined_singularityRegion_classifier.joblib.gz"
      balkClassifier = "/opt/lkc-bisnp/lkc_bisnp-run"
      snpPositions = "$baseDir/REFERENCES/pv_geo_refs/geoCombined_snpPositions.csv"
      REFERENCES = "$baseDir/REFERENCES/pv_geo_refs/"

    //output folders
      variantFolder = "$baseDir/GeoPrediction_output/variantCalls"
      predictionFolder = "$baseDir/GeoPrediction_output/predictedOut"
}

profiles {


//May add module load gatk in the before script, but will hold off for now
singularity {

    singularity.enabled = true
    singularity.cacheDir = "$baseDir/assets"

    process.shell = ['/bin/bash']
    singularity.runOptions = "-B /scicomp:/scicomp"
    singularity.autoMounts = true

    process {
    beforeScript = "source /etc/profile; source /etc/profile.d/modules.sh; module load nextflow"
    
    withLabel: nfNest {
    //Local singularity container built from Dockerfile. Built using singularity remote after converting Dockerfile to nfNest.def (and making changes to .def to make it work for singularity).
        container = "/scicomp/groups-pure/Projects/CycloDeploy/Plasmodium_Ampliseq_Nextflow/singularityContainers/nfNest_remoteBuild_v2.sif"
      }
    withLabel: bioinformaticProcessing {
        container = "/scicomp/groups-pure/Projects/CycloDeploy/Plasmodium_Ampliseq_Nextflow/singularityContainers/plasmodium_bioinformatics_container.sif"
      }
    withLabel: balkClassifier {
        container = "/scicomp/groups-pure/Projects/CycloDeploy/Plasmodium_Ampliseq_Nextflow/singularityContainers/balkClassifier.sif"
      }
    withLabel: reporting {
        container = "/scicomp/groups-pure/Projects/CycloDeploy/Plasmodium_Ampliseq_Nextflow/singularityContainers/R_report_v5.sif"
      }
    withLabel: mappingSoftware {
        container = "/scicomp/groups-pure/Projects/CycloDeploy/Plasmodium_Ampliseq_Nextflow/singularityContainers/cyclospora.sif"
      }
    withLabel: module2 {
        container = "/scicomp/groups-pure/Projects/CycloDeploy/cyclone/CYCLONE_Linux_v1.001/singularityContainers/testPythonEnv.sif"
      }
    withLabel: rScaling {
        container = "/scicomp/groups-pure/Projects/CycloDeploy/cyclone/CYCLONE_Linux_v1.001/singularityContainers/clusterRenv_Final.sif"
      }
    withLabel: ggtreeEnv {
        container = "/scicomp/groups-pure/Projects/CycloDeploy/Plasmodium_Ampliseq_Nextflow/singularityContainers/treeBuildR_env.sif"
      }
    withLabel: parnasEnv {
        container = "/scicomp/groups-pure/Projects/CycloDeploy/Plasmodium_Ampliseq_Nextflow/singularityContainers/parnas_container.sif"
      }
    
}


}

}


/* 
Update this in future
                                    Adding manifest
*/
/*
VERSION = '1.0.0'
manifest {
    name            = "yyr4/Nf-NeST"
    author          = "Dhruvi Patel"
    description     = 'Nextflow Next-generation Sequence-analysis Toolkit (Nf-NeST) : A standardized bioinformatics framework for analyzing SNPs in next-generation sequencing data'
    homePage        = "git@github.com:yyr4/Nf-NeST.git"
    mainScript      = "main.nf"
    nextflowVersion = ">=20.07"
    version         =  VERSION
}
*/
/*
timeline {
  enabled = true
  file = "$params.out/timeline.html"
}
*/